// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateAnalysis /> renders <IndexSelect /> subcomponent displays <NoneFound /> when no indexes provided 1`] = `
<div
  style={
    Object {
      "marginBottom": "16px",
    }
  }
>
  <label
    className="control-label"
  >
    References
  </label>
  <NoneFound
    noun="source references"
  />
</div>
`;

exports[`<CreateAnalysis /> renders <IndexSelect /> subcomponent displays error message and styling and index list 1`] = `
<div
  style={
    Object {
      "marginBottom": "16px",
    }
  }
>
  <label
    className="control-label"
  >
    References
  </label>
  <div>
    <ListGroup
      bsClass="list-group"
      style={
        Object {
          "border": "1px solid #d44b40",
          "marginBottom": "3px",
          "maxHeight": "165px",
          "overflowY": "auto",
        }
      }
    >
      <ListGroupItem
        allowFocus={false}
        key="index0"
        onClick={[Function]}
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={1}
        >
          <Checkbox
            checked={false}
            partial={false}
            pullRight={false}
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={8}
        >
          <strong>
            test-ref
          </strong>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          Index Version 
          <Label
            bsClass="label"
            bsStyle="default"
          >
            0
          </Label>
        </Col>
      </ListGroupItem>
    </ListGroup>
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <div
        className="input-form-error"
      >
        <span
          className="input-error-message"
        >
          Test Error
        </span>
      </div>
    </Col>
  </div>
</div>
`;

exports[`<CreateAnalysis /> renders correctly 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    New Analysis
  </ModalHeader>
  <form
    onSubmit={[Function]}
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <AlgorithmSelect
        hasHmm={false}
        onChange={[Function]}
        value="pathoscope_bowtie"
      />
      <IndexSelect
        error=""
        indexes={Array []}
        onSelect={[Function]}
        selected={Array []}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <Button
        bsStyle="primary"
        disabled={false}
        icon="play"
        pullRight={false}
        tipPlacement="top"
        type="submit"
      >
        Start
      </Button>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`<CreateAnalysis /> renders correctly 2`] = `
<div
  style={
    Object {
      "float": "left",
    }
  }
>
  Start 2 PathoscopeBowtie jobs.
</div>
`;

exports[`<CreateAnalysis /> renders correctly 3`] = `
<div
  style={
    Object {
      "float": "left",
    }
  }
>
  Start 2 PathoscopeBowtie jobs
             on 2 samples.
</div>
`;

exports[`<CreateAnalysis /> renders correctly 4`] = `
<div
  style={
    Object {
      "float": "left",
    }
  }
>
  Start 1 PathoscopeBowtie job
             on 1 sample.
</div>
`;
