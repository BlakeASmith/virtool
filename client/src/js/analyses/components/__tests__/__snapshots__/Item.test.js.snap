// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AnalysisItem /> renders base component correctly 1`] = `
<LinkContainer
  activeClassName="active"
  exact={false}
  replace={false}
  strict={false}
  to="/samples/undefined/analyses/test_analysis"
>
  <div
    className="list-group-item spaced hoverable"
    style={
      Object {
        "color": "#555",
      }
    }
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        md={4}
        sm={4}
        xs={4}
      >
        <strong>
          Test Algorithm
        </strong>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        md={4}
        sm={4}
        xs={5}
      >
        Started 
        <RelativeTime
          time="2018-02-14T17:12:00.000000Z"
        />
         by test-user
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        xs={2}
      >
        <span>
          123abc
          <Label
            bsClass="label"
            bsStyle="default"
            style={
              Object {
                "marginLeft": "5px",
              }
            }
          >
            123
          </Label>
        </span>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        md={2}
        sm={2}
        xsHidden={true}
      >
        <RightIcon
          algorithm="test_algorithm"
          created_at="2018-02-14T17:12:00.000000Z"
          id="test_analysis"
          index={
            Object {
              "version": 123,
            }
          }
          placeholder={false}
          ready={true}
          reference={
            Object {
              "name": "123abc",
            }
          }
          user={
            Object {
              "id": "test-user",
            }
          }
        />
      </Col>
    </Row>
  </div>
</LinkContainer>
`;

exports[`<AnalysisItem /> renders correctly 1`] = `
<div
  className="list-group-item spaced"
  style={
    Object {
      "color": "#555",
    }
  }
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      md={4}
      sm={4}
      xs={4}
    >
      <strong>
        Test Algorithm
      </strong>
    </Col>
    <Col
      bsClass="col"
      componentClass="div"
      md={4}
      sm={4}
      xs={5}
    >
      Started 
      <RelativeTime
        time="2018-02-14T17:12:00.000000Z"
      />
    </Col>
    <Col
      bsClass="col"
      componentClass="div"
      xs={2}
    />
    <Col
      bsClass="col"
      componentClass="div"
      md={2}
      sm={2}
      xsHidden={true}
    >
      <RightIcon
        algorithm="test_algorithm"
        canModify={true}
        created_at="2018-02-14T17:12:00.000000Z"
        id="test_analysis"
        onRemove={[Function]}
        placeholder={true}
        ready={false}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
      />
    </Col>
  </Row>
</div>
`;
