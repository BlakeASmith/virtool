// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
<span>
  <Icon
    faStyle="fas"
    fixedWidth={false}
    name="file-download"
    pullRight={false}
  />
   Export
</span>
`;

exports[`<Toolbar /> should render 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [filterIsolates=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [filterOTUs=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [filterOTUs=false] and [filterIsolates=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={false}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [showReads=true] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [sortDescending=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="coverage"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={false}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [sortKey='weight'] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <FormGroup
    bsClass="form-group"
  >
    <InputGroup
      bsClass="input-group"
    >
      <InputGroupButton
        bsClass="input-group-btn"
      >
        <Button
          bsStyle="default"
          onClick={[MockFunction]}
          pullRight={false}
          tip="Sort List"
          tipPlacement="top"
          title="Sort Direction"
        >
          <Icon
            faStyle="fas"
            fixedWidth={false}
            name="sort-amount-down"
            pullRight={false}
          />
        </Button>
      </InputGroupButton>
      <FormControl
        bsClass="form-control"
        componentClass="select"
        onChange={[Function]}
        value="weight"
      >
        <option
          className="text-primary"
          value="coverage"
        >
          Coverage
        </option>
        <option
          className="text-success"
          value="pi"
        >
          Weight
        </option>
        <option
          className="text-danger"
          value="depth"
        >
          Depth
        </option>
      </FormControl>
    </InputGroup>
  </FormGroup>
  <Button
    bsStyle="default"
    className="hidden-xs"
    disabled={false}
    icon="compress"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Collapse"
    tipPlacement="top"
    title="Collapse"
  />
  <Button
    active={true}
    bsStyle="default"
    className="hidden-xs"
    icon="chart-pie"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Weight Format"
    tipPlacement="top"
    title="Weight Format"
  />
  <Button
    active={true}
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Filter Results"
    tipPlacement="top"
    title="Filter"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="filter"
      pullRight={false}
    />
  </Button>
  <ButtonDropDown
    menuName={
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="sort-down"
        pullRight={false}
        size="sm"
      />
    }
    right="131px"
    top="495px"
  >
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      OTUs
    </ButtonDropDown__DropDownItem>
    <ButtonDropDown__DropDownItem
      onClick={[Function]}
    >
      <Checkbox
        checked={true}
      />
      Isolates
    </ButtonDropDown__DropDownItem>
  </ButtonDropDown>
  <DropdownButton
    id="download-dropdown"
    pullRight={true}
    style={
      Object {
        "zIndex": 1,
      }
    }
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </MenuItem>
    <MenuItem
      bsClass="dropdown"
      disabled={false}
      divider={false}
      header={false}
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </MenuItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;
