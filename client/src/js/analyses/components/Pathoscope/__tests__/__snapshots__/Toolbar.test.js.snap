// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Toolbar /> renders correctly 1`] = `
<StyledComponent
  detail={
    Object {
      "id": "foobar",
    }
  }
  filterIsolates={false}
  filterOTUs={false}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Toolbar__StyledPathoscopeToolbar-sc-1p9czx-0",
        "isStatic": true,
        "rules": Array [
          "margin-bottom:10px !important;",
        ],
      },
      "displayName": "Toolbar__StyledPathoscopeToolbar",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Toolbar__StyledPathoscopeToolbar-sc-1p9czx-0",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  onCollapse={[Function]}
  onFilter={[Function]}
  onSetSortKey={[Function]}
  onToggleShowMedian={[Function]}
  onToggleShowReads={[Function]}
  onToggleSortDescending={[Function]}
  showMedian={false}
  showReads={false}
  sortDescending={false}
  sortKey=""
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;

exports[`<Toolbar /> renders correctly 2`] = `
<StyledComponent
  detail={
    Object {
      "id": "foobar",
    }
  }
  filterIsolates={false}
  filterOTUs={false}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Toolbar__StyledPathoscopeToolbar-sc-1p9czx-0",
        "isStatic": true,
        "rules": Array [
          "margin-bottom:10px !important;",
        ],
      },
      "displayName": "Toolbar__StyledPathoscopeToolbar",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Toolbar__StyledPathoscopeToolbar-sc-1p9czx-0",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  onCollapse={[Function]}
  onFilter={[Function]}
  onSetSortKey={[Function]}
  onToggleShowMedian={[Function]}
  onToggleShowReads={[Function]}
  onToggleSortDescending={[Function]}
  showMedian={false}
  showReads={false}
  sortDescending={true}
  sortKey=""
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;
