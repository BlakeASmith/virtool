// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReferenceDetailHeader/> should render 1`] = `
<ViewHeader
  title="baz"
>
  <ViewHeader__ViewHeaderTitle>
    baz
    <ViewHeader__ViewHeaderIcons>
      <ReferenceDetailHeaderIcon
        canModify={true}
        isRemote={true}
        onEdit={[MockFunction]}
      />
      <ReferenceDetailHeaderExportButton
        isClone={true}
        onSelect={[Function]}
      />
    </ViewHeader__ViewHeaderIcons>
  </ViewHeader__ViewHeaderTitle>
  <ViewHeader__ViewHeaderAttribution
    time="foo"
    user={1}
  />
</ViewHeader>
`;

exports[`<ReferenceDetailHeader/> should render when [showIcons=false] 1`] = `
<ViewHeader
  title="baz"
>
  <ViewHeader__ViewHeaderTitle>
    baz
    <ViewHeader__ViewHeaderIcons />
  </ViewHeader__ViewHeaderTitle>
  <ViewHeader__ViewHeaderAttribution
    time="foo"
    user={1}
  />
</ViewHeader>
`;

exports[`<ReferenceDetailHeaderExportButton /> should render 1`] = `
<DropdownIcon
  name="download"
  tip="Export"
>
  <DropdownItem
    onClick={[Function]}
  >
    <Header__ExportDropdownItem>
      <h5>
        Normal
      </h5>
      <p>
        Export the reference with the local OTU IDs.
      </p>
    </Header__ExportDropdownItem>
  </DropdownItem>
  <DropdownItem
    onClick={[Function]}
  >
    <Header__ExportDropdownItem>
      <h5>
        Source
      </h5>
      <p>
        Export the reference using the OTU IDs from the source reference for this clone.
      </p>
    </Header__ExportDropdownItem>
  </DropdownItem>
</DropdownIcon>
`;

exports[`<ReferenceDetailHeaderExportButton /> should render when [isClone = false] 1`] = `
<DropdownIcon
  name="download"
  tip="Export"
>
  <DropdownItem
    onClick={[Function]}
  >
    <Header__ExportDropdownItem>
      <h5>
        Normal
      </h5>
      <p>
        Export the reference with the local OTU IDs.
      </p>
    </Header__ExportDropdownItem>
  </DropdownItem>
</DropdownIcon>
`;

exports[`<ReferenceDetailHeaderIcon /> should render 1`] = `
<Icon
  color="grey"
  faStyle="fas"
  fixedWidth={false}
  name="lock"
/>
`;

exports[`<ReferenceDetailHeaderIcon /> should render when [both canModify=false, isRemote=false] 1`] = `""`;

exports[`<ReferenceDetailHeaderIcon /> should render when [canModify=false] 1`] = `
<Icon
  color="grey"
  faStyle="fas"
  fixedWidth={false}
  name="lock"
/>
`;

exports[`<ReferenceDetailHeaderIcon /> should render when [isRemote=false] 1`] = `
<Icon
  color="orange"
  faStyle="fas"
  fixedWidth={false}
  name="pencil-alt"
  onClick={[MockFunction]}
  tip="Edit"
/>
`;
